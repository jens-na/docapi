{
  "commands": "Returns the value of attribute commands",
  "commands=": "Sets the attribute commands",
  "delegate": "Returns the value of attribute delegate",
  "delegate=": "Sets the attribute delegate",
  "reverting": "Returns the value of attribute reverting",
  "reverting=": "Sets the attribute reverting",
  "initialize": "",
  "revert": "While executing the given block, the recorded will be in reverting mode.\nAll commands recorded will end up being recorded reverted\nand in reverse order.\nFor example:\n\n  recorder.revert{ recorder.record(:rename_table, [:old, :new]) }\n  # same effect as recorder.record(:rename_table, [:new, :old])",
  "record": "record +command+. +command+ should be a method name and arguments.\nFor example:\n\n  recorder.record(:method_name, [:arg1, :arg2])",
  "inverse_of": "Returns the inverse of the given command. For example:\n\n  recorder.inverse_of(:rename_table, [:old, :new])\n  # => [:rename_table, [:new, :old]]\n\nThis method will raise an +IrreversibleMigration+ exception if it cannot\ninvert the +command+.",
  "respond_to?": ":nodoc:",
  "add_belongs_to": "",
  "remove_belongs_to": "",
  "change_table": "",
  "StraightReversions": "",
  "invert_drop_table": "",
  "invert_rename_table": "",
  "invert_remove_column": "",
  "invert_rename_index": "",
  "invert_rename_column": "",
  "invert_add_index": "",
  "invert_remove_index": "",
  "invert_add_belongs_to": "",
  "invert_remove_belongs_to": "",
  "invert_change_column_null": "",
  "method_missing": "Forwards any missing method call to the \\target."
}