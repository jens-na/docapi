{
  "initialize": "",
  "size": "Returns the size of the collection by executing a SELECT COUNT(*) query if the collection hasn't been\nloaded and calling collection.size if it has. If it's more likely than not that the collection does\nhave a size larger than zero, and you need to fetch that collection afterwards, it'll take one fewer\nSELECT query if you use #length.",
  "concat": "",
  "concat_records": "",
  "insert_record": "",
  "through_association": "",
  "build_through_record": "We temporarily cache through record that has been build, because if we build a\nthrough record in build_record and then subsequently call insert_record, then we\nwant to use the exact same object.\n\nHowever, after insert_record has been called, we clear the cache entry because\nwe want it to be possible to have multiple instances of the same record in an\nassociation",
  "save_through_record": "",
  "build_record": "",
  "target_reflection_has_associated_record?": "",
  "update_through_counter?": "",
  "delete_records": "",
  "through_records_for": "",
  "delete_through_records": "",
  "find_target": "",
  "invertible_for?": "NOTE - not sure that we can actually cope with inverses here"
}