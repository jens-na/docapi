{
  "SchemaCreation": "",
  "schema_creation": "",
  "Column": ":nodoc:",
  "emulate_booleans": ":singleton-method:\nBy default, the MysqlAdapter will consider all columns of type <tt>tinyint(1)</tt>\nas boolean. If you wish to disable this emulation (which was the default\nbehavior in versions 0.13.1 and earlier) you can add the following line\nto your application.rb file:\n\n  ActiveRecord::ConnectionAdapters::Mysql[2]Adapter.emulate_booleans = false",
  "LOST_CONNECTION_ERROR_MESSAGES": "",
  "NATIVE_DATABASE_TYPES": "",
  "INDEX_TYPES": "",
  "INDEX_USINGS": "",
  "initialize": "FIXME: Make the first parameter more similar for the two adapters",
  "adapter_name": ":nodoc:",
  "supports_migrations?": "Returns true, since this connection adapter supports migrations.",
  "supports_primary_key?": "",
  "supports_bulk_alter?": ":nodoc:",
  "supports_index_sort_order?": "Technically MySQL allows to create indexes with the sort order syntax\nbut at the moment (5.5) it doesn't yet implement them",
  "supports_transaction_isolation?": "MySQL 4 technically support transaction isolation, but it is affected by a bug\nwhere the transaction level gets persisted for the whole session:\n\nhttp://bugs.mysql.com/bug.php?id=39170",
  "supports_indexes_in_create?": "",
  "native_database_types": "",
  "index_algorithms": "",
  "each_hash": "The two drivers have slightly different ways of yielding hashes of results, so\nthis method must be implemented to provide a uniform interface.",
  "new_column": ":nodoc:",
  "error_number": "Must return the Mysql error number from the exception, if the exception has an\nerror number.",
  "_quote": "QUOTING ==================================================",
  "quote_column_name": ":nodoc:",
  "quote_table_name": ":nodoc:",
  "quoted_true": "",
  "unquoted_true": "",
  "quoted_false": "",
  "unquoted_false": "",
  "disable_referential_integrity": "REFERENTIAL INTEGRITY ====================================",
  "clear_cache!": "DATABASE STATEMENTS ======================================",
  "execute": "Executes the SQL statement in the context of this connection.",
  "execute_and_free": "MysqlAdapter has to free a result after using it, so we use this method to write\nstuff in an abstract way without concerning ourselves about whether it needs to be\nexplicitly freed or not.",
  "update_sql": ":nodoc:",
  "begin_db_transaction": "",
  "begin_isolated_db_transaction": "",
  "commit_db_transaction": ":nodoc:",
  "rollback_db_transaction": ":nodoc:",
  "join_to_update": "In the simple case, MySQL allows us to place JOINs directly into the UPDATE\nquery. However, this does not allow for LIMIT, OFFSET and ORDER. To support\nthese, we must use a subquery.",
  "empty_insert_statement_value": "",
  "recreate_database": "Drops the database specified on the +name+ attribute\nand creates it again using the provided +options+.",
  "create_database": "Create a new MySQL database with optional <tt>:charset</tt> and <tt>:collation</tt>.\nCharset defaults to utf8.\n\nExample:\n  create_database 'charset_test', charset: 'latin1', collation: 'latin1_bin'\n  create_database 'matt_development'\n  create_database 'matt_development', charset: :big5",
  "drop_database": "Drops a MySQL database.\n\nExample:\n  drop_database('sebastian_development')",
  "current_database": "",
  "charset": "Returns the database character set.",
  "collation": "Returns the database collation strategy.",
  "tables": ":nodoc:",
  "table_exists?": "",
  "indexes": "Returns an array of indexes for the given table.",
  "columns": "Returns an array of +Column+ objects for the table specified by +table_name+.",
  "create_table": ":nodoc:",
  "bulk_change_table": ":nodoc:",
  "rename_table": "Renames a table.\n\nExample:\n  rename_table('octopuses', 'octopi')",
  "drop_table": "",
  "rename_index": "",
  "change_column_default": "",
  "change_column_null": "",
  "change_column": ":nodoc:",
  "rename_column": ":nodoc:",
  "add_index": ":nodoc:",
  "type_to_sql": "Maps logical Rails types to MySQL-specific data types.",
  "add_column_position!": "",
  "show_variable": "SHOW VARIABLES LIKE 'name'",
  "pk_and_sequence_for": "Returns a table's primary key and belonging sequence.",
  "primary_key": "Returns just a table's primary key",
  "case_sensitive_modifier": "",
  "case_sensitive_comparison": "",
  "case_insensitive_comparison": "",
  "limited_update_conditions": "",
  "strict_mode?": "",
  "valid_type?": "",
  "initialize_type_map": ":nodoc:",
  "subquery_for": "MySQL is too stupid to create a temporary table for use subquery, so we have\nto give it some prompting in the form of a subsubquery. Ugh!",
  "add_index_length": "",
  "quoted_columns_for_index": "",
  "translate_exception": "",
  "add_column_sql": "",
  "change_column_sql": "",
  "rename_column_sql": "",
  "remove_column_sql": "",
  "remove_columns_sql": "",
  "add_index_sql": "",
  "remove_index_sql": "",
  "add_timestamps_sql": "",
  "remove_timestamps_sql": "",
  "supports_views?": "",
  "configure_connection": ""
}