{
  "TRUE_VALUES": "",
  "FALSE_VALUES": "",
  "Format": "",
  "name": "Returns the value of attribute name",
  "default": "Returns the value of attribute default",
  "type": "Returns the value of attribute type",
  "limit": "Returns the value of attribute limit",
  "null": "Returns the value of attribute null",
  "sql_type": "Returns the value of attribute sql_type",
  "precision": "Returns the value of attribute precision",
  "scale": "Returns the value of attribute scale",
  "default_function": "Returns the value of attribute default_function",
  "primary": "Returns the value of attribute primary",
  "primary=": "Sets the attribute primary",
  "coder": "Returns the value of attribute coder",
  "coder=": "Sets the attribute coder",
  "encoded?": "Returns the value of attribute coder",
  "initialize": "Instantiates a new column in the table.\n\n+name+ is the column's name, such as <tt>supplier_id</tt> in <tt>supplier_id int(11)</tt>.\n+default+ is the type-casted default value, such as +new+ in <tt>sales_stage varchar(20) default 'new'</tt>.\n+sql_type+ is used to extract the column's length, if necessary. For example +60+ in\n<tt>company_name varchar(60)</tt>.\nIt will be mapped to one of the standard Rails SQL types in the <tt>type</tt> attribute.\n+null+ determines if this column allows +NULL+ values.",
  "text?": "Returns +true+ if the column is either of type string or text.",
  "number?": "Returns +true+ if the column is either of type integer, float or decimal.",
  "has_default?": "",
  "klass": "Returns the Ruby class that corresponds to the abstract data type.",
  "binary?": "",
  "type_cast_for_write": "Casts a Ruby value to something appropriate for writing to the database.",
  "type_cast": "Casts value (which is a String) to an appropriate instance.",
  "human_name": "Returns the human name of the column name.\n\n===== Examples\n Column.new('sales_stage', ...).human_name # => 'Sales stage'",
  "extract_default": "",
  "binary_to_string": "Used to convert from BLOBs to Strings",
  "value_to_date": "",
  "string_to_time": "",
  "string_to_dummy_time": "",
  "value_to_boolean": "convert something to a boolean",
  "value_to_integer": "Used to convert values to integer.\nhandle the case when an integer column is used to store boolean values",
  "value_to_decimal": "convert something to a BigDecimal",
  "microseconds": "'0.123456' -> 123456\n'1.123456' -> 123456",
  "new_date": "",
  "new_time": "",
  "fast_string_to_date": "",
  "fast_string_to_time": "Doesn't handle time zones.",
  "fallback_string_to_date": "",
  "fallback_string_to_time": "",
  "extract_limit": "",
  "extract_precision": "",
  "extract_scale": "",
  "simplified_type": ""
}