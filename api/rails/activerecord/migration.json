{
  "message_count": "Returns the value of attribute message_count",
  "message_count=": "Sets the attribute message_count",
  "puts": "",
  "TestHelper": "",
  "CheckPending": "This class is used to verify that all migrations have been run before\nloading a web page if config.active_record.migration_error is set to :page_load",
  "delegate": ":nodoc:",
  "delegate=": ":nodoc:",
  "disable_ddl_transaction": ":nodoc:",
  "disable_ddl_transaction=": ":nodoc:",
  "check_pending!": "",
  "load_schema_if_pending!": "",
  "maintain_test_schema!": ":nodoc:",
  "method_missing": "",
  "migrate": "Execute this migration in the named direction",
  "disable_ddl_transaction!": "Disable DDL transactions for this migration.",
  "name": "Returns the value of attribute name",
  "name=": "Sets the attribute name",
  "version": "Returns the value of attribute version",
  "version=": "Sets the attribute version",
  "initialize": "",
  "revert": "Reverses the migration commands for the given block and\nthe given migrations.\n\nThe following migration will remove the table 'horses'\nand create the table 'apples' on the way up, and the reverse\non the way down.\n\n  class FixTLMigration < ActiveRecord::Migration\n    def change\n      revert do\n        create_table(:horses) do |t|\n          t.text :content\n          t.datetime :remind_at\n        end\n      end\n      create_table(:apples) do |t|\n        t.string :variety\n      end\n    end\n  end\n\nOr equivalently, if +TenderloveMigration+ is defined as in the\ndocumentation for Migration:\n\n  require_relative '2012121212_tenderlove_migration'\n\n  class FixupTLMigration < ActiveRecord::Migration\n    def change\n      revert TenderloveMigration\n\n      create_table(:apples) do |t|\n        t.string :variety\n      end\n    end\n  end\n\nThis command can be nested.",
  "reverting?": "",
  "ReversibleBlockHelper": ":nodoc:",
  "reversible": "Used to specify an operation that can be run in one direction or another.\nCall the methods +up+ and +down+ of the yielded object to run a block\nonly in one given direction.\nThe whole block will be called in the right order within the migration.\n\nIn the following example, the looping on users will always be done\nwhen the three columns 'first_name', 'last_name' and 'full_name' exist,\neven when migrating down:\n\n   class SplitNameMigration < ActiveRecord::Migration\n     def change\n       add_column :users, :first_name, :string\n       add_column :users, :last_name, :string\n\n       reversible do |dir|\n         User.reset_column_information\n         User.all.each do |u|\n           dir.up   { u.first_name, u.last_name = u.full_name.split(' ') }\n           dir.down { u.full_name = \"#{u.first_name} #{u.last_name}\" }\n           u.save\n         end\n       end\n\n       revert { add_column :users, :full_name, :string }\n     end\n   end",
  "run": "Runs the given migration classes.\nLast argument can specify options:\n- :direction (default is :up)\n- :revert (default is false)",
  "up": "",
  "down": "",
  "exec_migration": "",
  "write": "",
  "announce": "",
  "say": "",
  "say_with_time": "",
  "suppress_messages": "",
  "connection": "",
  "copy": "",
  "proper_table_name": "Finds the correct table name given an Active Record object.\nUses the Active Record object's own table_name, or pre/suffix from the\noptions passed in.",
  "next_migration_number": "Determines the version number of the next migration.",
  "table_name_options": "",
  "execute_block": "",
  "IndexTest": "",
  "LoggerTest": "",
  "ColumnsTest": "",
  "RenameTableTest": "",
  "TableTest": "",
  "JoinTable": ":nodoc:",
  "ChangeSchemaTest": "",
  "TableAndIndexTest": "",
  "CommandRecorderTest": "",
  "ReferencesIndexTest": "",
  "CreateJoinTableTest": "",
  "ColumnAttributesTest": "",
  "ColumnPositioningTest": "",
  "CommandRecorder": "<tt>ActiveRecord::Migration::CommandRecorder</tt> records commands done during\na migration and knows how to reverse those commands. The CommandRecorder\nknows how to invert the following commands:\n\n* add_column\n* add_index\n* add_timestamps\n* create_table\n* create_join_table\n* remove_timestamps\n* rename_column\n* rename_index\n* rename_table",
  "ReferencesStatementsTest": ""
}