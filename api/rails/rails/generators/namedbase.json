{
  "initialize": ":nodoc:",
  "file_name": "Returns the value of attribute file_name",
  "singular_name": "FIXME: We are avoiding to use alias because a bug on thor that make\nthis method public and add it to the task list.",
  "module_namespacing": "Wrap block with namespace of current application\nif namespace exists and is not skipped",
  "indent": "",
  "wrap_with_namespace": "",
  "inside_template": "",
  "inside_template?": "",
  "namespace": "",
  "namespaced?": "",
  "file_path": "",
  "class_path": "",
  "regular_class_path": "",
  "namespaced_file_path": "",
  "namespaced_class_path": "",
  "namespaced_path": "",
  "class_name": "",
  "human_name": "",
  "plural_name": "",
  "i18n_scope": "",
  "table_name": "",
  "uncountable?": "",
  "index_helper": "",
  "singular_table_name": "",
  "plural_table_name": "",
  "plural_file_name": "",
  "route_url": "",
  "application_name": "Tries to retrieve the application name or simple return application.",
  "assign_names!": ":nodoc:",
  "parse_attributes!": "Convert attributes array into GeneratedAttribute objects.",
  "attributes_names": "",
  "pluralize_table_names?": "",
  "check_class_collision": "Add a class collisions name to be checked on class initialization. You\ncan supply a hash with a :prefix or :suffix to be tested.\n\n==== Examples\n\n  check_class_collision suffix: \"Decorator\"\n\nIf the generator is invoked with class name Admin, it will check for\nthe presence of \"AdminDecorator\"."
}