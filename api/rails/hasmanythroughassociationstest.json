{
  "setup": "Dummies to force column loads so query counts are clean.",
  "test_preload_sti_rhs_class": "",
  "test_preload_sti_middle_relation": "",
  "make_model": "",
  "test_ordered_habtm": "",
  "test_singleton_has_many_through": "",
  "test_no_pk_join_table_append": "",
  "test_no_pk_join_table_delete": "",
  "test_no_pk_join_model_callbacks": "",
  "make_no_pk_hm_t": "",
  "test_pk_is_not_required_for_join": "",
  "test_include?": "",
  "test_associate_existing": "",
  "test_delete_all_for_with_dependent_option_destroy": "",
  "test_delete_all_for_with_dependent_option_nullify": "",
  "test_delete_all_for_with_dependent_option_delete_all": "",
  "test_concat": "",
  "test_associate_existing_record_twice_should_add_to_target_twice": "",
  "test_associate_existing_record_twice_should_add_records_twice": "",
  "test_add_two_instance_and_then_deleting": "",
  "test_associating_new": "",
  "test_associate_new_by_building": "",
  "test_build_then_save_with_has_many_inverse": "",
  "test_build_then_save_with_has_one_inverse": "",
  "test_both_parent_ids_set_when_saving_new": "",
  "test_delete_association": "",
  "test_destroy_association": "",
  "test_destroy_all": "",
  "test_should_raise_exception_for_destroying_mismatching_records": "",
  "test_delete_through_belongs_to_with_dependent_nullify": "",
  "test_delete_through_belongs_to_with_dependent_delete_all": "",
  "test_delete_through_belongs_to_with_dependent_destroy": "",
  "test_belongs_to_with_dependent_destroy": "",
  "test_belongs_to_with_dependent_delete_all": "",
  "test_belongs_to_with_dependent_nullify": "",
  "test_update_counter_caches_on_delete": "",
  "test_update_counter_caches_on_delete_with_dependent_destroy": "",
  "test_update_counter_caches_on_delete_with_dependent_nullify": "",
  "test_update_counter_caches_on_replace_association": "",
  "test_update_counter_caches_on_destroy": "",
  "test_replace_association": "",
  "test_replace_order_is_preserved": "",
  "test_replace_by_id_order_is_preserved": "",
  "test_associate_with_create": "",
  "test_associate_with_create_and_no_options": "",
  "test_associate_with_create_with_through_having_conditions": "",
  "test_associate_with_create_exclamation_and_no_options": "",
  "test_create_on_new_record": "",
  "test_associate_with_create_and_invalid_options": "",
  "test_associate_with_create_and_valid_options": "",
  "test_associate_with_create_bang_and_invalid_options": "",
  "test_associate_with_create_bang_and_valid_options": "",
  "test_push_with_invalid_record": "",
  "test_push_with_invalid_join_record": "",
  "test_clear_associations": "",
  "test_association_callback_ordering": "",
  "test_dynamic_find_should_respect_association_include": "",
  "test_count_with_include_should_alias_join_table": "",
  "test_inner_join_with_quoted_table_name": "",
  "test_get_ids": "",
  "test_get_ids_for_has_many_through_with_conditions_should_not_preload": "",
  "test_get_ids_for_loaded_associations": "",
  "test_get_ids_for_unloaded_associations_does_not_load_them": "",
  "test_association_proxy_transaction_method_starts_transaction_in_association_class": "",
  "test_has_many_association_through_a_belongs_to_association_where_the_association_doesnt_exist": "",
  "test_has_many_association_through_a_belongs_to_association": "",
  "test_merge_join_association_with_has_many_through_association_proxy": "",
  "test_has_many_association_through_a_has_many_association_with_nonstandard_primary_keys": "",
  "test_find_on_has_many_association_collection_with_include_and_conditions": "",
  "test_has_many_through_has_one_reflection": "",
  "test_modifying_has_many_through_has_one_reflection_should_raise": "",
  "test_has_many_association_through_a_has_many_association_to_self": "",
  "test_associate_existing_with_nonstandard_primary_key_on_belongs_to": "",
  "test_collection_build_with_nonstandard_primary_key_on_belongs_to": "",
  "test_collection_create_with_nonstandard_primary_key_on_belongs_to": "",
  "test_collection_exists": "",
  "test_collection_delete_with_nonstandard_primary_key_on_belongs_to": "",
  "test_collection_singular_ids_getter_with_string_primary_keys": "",
  "test_collection_singular_ids_setter": "",
  "test_collection_singular_ids_setter_with_string_primary_keys": "",
  "test_collection_singular_ids_setter_raises_exception_when_invalid_ids_set": "",
  "test_build_a_model_from_hm_through_association_with_where_clause": "",
  "test_attributes_are_being_set_when_initialized_from_hm_through_association_with_where_clause": "",
  "test_attributes_are_being_set_when_initialized_from_hm_through_association_with_multiple_where_clauses": "",
  "test_include_method_in_association_through_should_return_true_for_instance_added_with_build": "",
  "test_include_method_in_association_through_should_return_true_for_instance_added_with_nested_builds": "",
  "test_through_association_readonly_should_be_false": "",
  "test_can_update_through_association": "",
  "test_has_many_through_polymorphic_with_primary_key_option": "",
  "test_has_many_through_with_primary_key_option": "",
  "test_size_of_through_association_should_increase_correctly_when_has_many_association_is_added": "",
  "test_has_many_through_with_default_scope_on_join_model": "",
  "test_create_has_many_through_with_default_scope_on_join_model": "",
  "test_joining_has_many_through_with_uniq": "",
  "test_joining_has_many_through_belongs_to": "",
  "test_select_chosen_fields_only": "",
  "test_get_has_many_through_belongs_to_ids_with_conditions": "",
  "test_get_collection_singular_ids_on_has_many_through_with_conditions_and_include": "",
  "test_count_has_many_through_with_named_scope": "",
  "test_has_many_through_belongs_to_should_update_when_the_through_foreign_key_changes": "",
  "test_create_with_conditions_hash_on_through_association": "",
  "test_deleting_from_has_many_through_a_belongs_to_should_not_try_to_update_counter": "",
  "test_primary_key_option_on_source": "",
  "test_create_should_not_raise_exception_when_join_record_has_errors": "",
  "test_save_should_not_raise_exception_when_join_record_has_errors": "",
  "test_assign_array_to_new_record_builds_join_records": "",
  "test_create_bang_should_raise_exception_when_join_record_has_errors": "",
  "test_save_bang_should_raise_exception_when_join_record_has_errors": "",
  "test_create_bang_returns_falsy_when_join_record_has_errors": "",
  "test_preloading_empty_through_association_via_joins": "",
  "test_explicitly_joining_join_table": "",
  "test_has_many_through_with_polymorphic_source": "",
  "test_has_many_through_obeys_order_on_through_association": "",
  "test_has_many_through_associations_on_new_records_use_null_relations": "",
  "test_has_many_through_with_default_scope_on_the_target": "",
  "test_has_many_through_with_includes_in_through_association_scope": "",
  "test_insert_records_via_has_many_through_association_with_scope": "",
  "test_has_many_through_unscope_default_scope": ""
}