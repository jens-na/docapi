{
  "test_has_many": "",
  "test_has_many_inherited": "",
  "test_inherited_has_many": "",
  "test_has_many_uniq_through_join_model": "",
  "test_has_many_uniq_through_count": "",
  "test_has_many_uniq_through_find": "",
  "test_polymorphic_has_many_going_through_join_model": "",
  "test_count_polymorphic_has_many": "",
  "test_polymorphic_has_many_going_through_join_model_with_find": "",
  "test_polymorphic_has_many_going_through_join_model_with_include_on_source_reflection": "",
  "test_polymorphic_has_many_going_through_join_model_with_include_on_source_reflection_with_find": "",
  "test_polymorphic_has_many_going_through_join_model_with_custom_select_and_joins": "",
  "test_polymorphic_has_many_going_through_join_model_with_custom_foreign_key": "",
  "test_polymorphic_has_many_create_model_with_inheritance_and_custom_base_class": "",
  "test_polymorphic_has_many_going_through_join_model_with_inheritance": "",
  "test_polymorphic_has_many_going_through_join_model_with_inheritance_with_custom_class_name": "",
  "test_polymorphic_has_many_create_model_with_inheritance": "",
  "test_polymorphic_has_one_create_model_with_inheritance": "",
  "test_set_polymorphic_has_many": "",
  "test_set_polymorphic_has_one": "",
  "test_set_polymorphic_has_one_on_new_record": "",
  "test_create_polymorphic_has_many_with_scope": "",
  "test_create_bang_polymorphic_with_has_many_scope": "",
  "test_create_polymorphic_has_one_with_scope": "",
  "test_delete_polymorphic_has_many_with_delete_all": "",
  "test_delete_polymorphic_has_many_with_destroy": "",
  "test_delete_polymorphic_has_many_with_nullify": "",
  "test_delete_polymorphic_has_one_with_destroy": "",
  "test_delete_polymorphic_has_one_with_nullify": "",
  "test_has_many_with_piggyback": "",
  "test_create_through_has_many_with_piggyback": "",
  "test_include_has_many_through": "",
  "test_include_polymorphic_has_one": "",
  "test_include_polymorphic_has_one_defined_in_abstract_parent": "",
  "test_include_polymorphic_has_many_through": "",
  "test_include_polymorphic_has_many": "",
  "test_has_many_find_all": "",
  "test_has_many_find_first": "",
  "test_has_many_with_hash_conditions": "",
  "test_has_many_find_conditions": "",
  "test_has_many_array_methods_called_by_method_missing": "",
  "test_has_many_going_through_join_model_with_custom_foreign_key": "",
  "test_has_many_going_through_join_model_with_custom_primary_key": "",
  "test_has_many_going_through_polymorphic_join_model_with_custom_primary_key": "",
  "test_has_many_through_with_custom_primary_key_on_belongs_to_source": "",
  "test_has_many_through_with_custom_primary_key_on_has_many_source": "",
  "test_belongs_to_polymorphic_with_counter_cache": "",
  "test_unavailable_through_reflection": "",
  "test_has_many_through_join_model_with_conditions": "",
  "test_has_many_polymorphic": "",
  "test_has_many_polymorphic_with_source_type": "",
  "test_eager_has_many_polymorphic_with_source_type": "",
  "test_has_many_through_has_many_find_all": "",
  "test_has_many_through_has_many_find_all_with_custom_class": "",
  "test_has_many_through_has_many_find_first": "",
  "test_has_many_through_has_many_find_conditions": "",
  "test_has_many_through_has_many_find_by_id": "",
  "test_has_many_through_polymorphic_has_one": "",
  "test_has_many_through_polymorphic_has_many": "",
  "test_include_has_many_through_polymorphic_has_many": "",
  "test_eager_load_has_many_through_has_many": "",
  "test_eager_load_has_many_through_has_many_with_conditions": "",
  "test_eager_belongs_to_and_has_one_not_singularized": "",
  "test_self_referential_has_many_through": "",
  "test_add_to_self_referential_has_many_through": "",
  "test_has_many_through_uses_conditions_specified_on_the_has_many_association": "",
  "test_has_many_through_uses_correct_attributes": "",
  "test_associating_unsaved_records_with_has_many_through": "",
  "test_create_associate_when_adding_to_has_many_through": "",
  "test_add_to_join_table_with_no_id": "",
  "test_has_many_through_collection_size_doesnt_load_target_if_not_loaded": "",
  "test_has_many_through_collection_size_uses_counter_cache_if_it_exists": "",
  "test_adding_junk_to_has_many_through_should_raise_type_mismatch": "",
  "test_adding_to_has_many_through_should_return_self": "",
  "test_delete_associate_when_deleting_from_has_many_through_with_nonstandard_id": "",
  "test_delete_associate_when_deleting_from_has_many_through": "",
  "test_delete_associate_when_deleting_from_has_many_through_with_multiple_tags": "",
  "test_deleting_junk_from_has_many_through_should_raise_type_mismatch": "",
  "test_deleting_by_fixnum_id_from_has_many_through": "",
  "test_deleting_by_string_id_from_has_many_through": "",
  "test_has_many_through_sum_uses_calculations": "",
  "test_calculations_on_has_many_through_should_disambiguate_fields": "",
  "test_calculations_on_has_many_through_should_not_disambiguate_fields_unless_necessary": "",
  "test_has_many_through_has_many_with_sti": "",
  "test_uniq_has_many_through_should_retain_order": "",
  "test_polymorphic_has_many": "",
  "test_polymorphic_has_one": "",
  "test_polymorphic_belongs_to": "",
  "test_preload_polymorphic_has_many_through": "",
  "test_preload_polymorph_many_types": "",
  "test_preload_nil_polymorphic_belongs_to": "",
  "test_preload_polymorphic_has_many": "",
  "test_belongs_to_shared_parent": "",
  "test_has_many_through_include_uses_array_include_after_loaded": "",
  "test_has_many_through_include_checks_if_record_exists_if_target_not_loaded": "",
  "test_has_many_through_include_returns_false_for_non_matching_record_to_verify_scoping": "",
  "test_has_many_through_goes_through_all_sti_classes": "",
  "test_has_many_with_pluralize_table_names_false": "",
  "find_post_with_dependency": "create dynamic Post models to allow different dependency options"
}