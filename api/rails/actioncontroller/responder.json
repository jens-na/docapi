{
  "controller": "Returns the value of attribute controller",
  "request": "Returns the value of attribute request",
  "format": "Returns the value of attribute format",
  "resource": "Returns the value of attribute resource",
  "resources": "Returns the value of attribute resources",
  "options": "Returns the value of attribute options",
  "DEFAULT_ACTIONS_FOR_VERBS": "",
  "initialize": "",
  "call": "Initializes a new responder and invokes the proper format. If the format is\nnot defined, call to_format.",
  "respond": "Main entry point for responder responsible to dispatch to the proper format.",
  "to_html": "HTML format does not render the resource, it always attempt to render a\ntemplate.",
  "to_js": "to_js simply tries to render a template. If no template is found, raises the error.",
  "to_format": "All other formats follow the procedure below. First we try to render a\ntemplate, if the template is not available, we verify if the resource\nresponds to :to_format and display it.",
  "navigation_behavior": "This is the common behavior for formats associated with browsing, like :html, :iphone and so forth.",
  "api_behavior": "This is the common behavior for formats associated with APIs, such as :xml and :json.",
  "resourceful?": "Checks whether the resource responds to the current format or not.",
  "resource_location": "Returns the resource location by retrieving it from the options or\nreturning the resources array.",
  "navigation_location": "Returns the resource location by retrieving it from the options or\nreturning the resources array.",
  "api_location": "Returns the resource location by retrieving it from the options or\nreturning the resources array.",
  "default_render": "If a response block was given, use it, otherwise call render on\ncontroller.",
  "display": "Display is just a shortcut to render a resource with the current format.\n\n  display @user, status: :ok\n\nFor XML requests it's equivalent to:\n\n  render xml: @user, status: :ok\n\nOptions sent by the user are also used:\n\n  respond_with(@user, status: :created)\n  display(@user, status: :ok)\n\nResults in:\n\n  render xml: @user, status: :created",
  "display_errors": "",
  "has_errors?": "Check whether the resource has errors.",
  "has_renderer?": "Check whether the necessary Renderer is available",
  "default_action": "By default, render the <code>:edit</code> action for HTML requests with errors, unless\nthe verb was POST.",
  "resource_errors": "",
  "json_resource_errors": "",
  "response_overridden?": ""
}