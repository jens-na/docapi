{
  "test_eager_with_has_one_through_join_model_with_conditions_on_the_through": "",
  "test_loading_with_one_association": "",
  "test_loading_with_one_association_with_non_preload": "",
  "test_loading_conditions_with_or": "",
  "test_with_ordering": "",
  "test_has_many_through_with_order": "",
  "test_with_two_tables_in_from_without_getting_double_quoted": "",
  "test_loading_with_multiple_associations": "",
  "test_duplicate_middle_objects": "",
  "test_preloading_has_many_in_multiple_queries_with_more_ids_than_database_can_handle": "",
  "test_preloading_has_many_in_one_queries_when_database_has_no_limit_on_ids_it_can_handle": "",
  "test_preloading_habtm_in_multiple_queries_with_more_ids_than_database_can_handle": "",
  "test_preloading_habtm_in_one_queries_when_database_has_no_limit_on_ids_it_can_handle": "",
  "test_load_associated_records_in_one_query_when_adapter_has_no_limit": "",
  "test_load_associated_records_in_several_queries_when_many_ids_passed": "",
  "test_load_associated_records_in_one_query_when_a_few_ids_passed": "",
  "test_including_duplicate_objects_from_belongs_to": "",
  "test_including_duplicate_objects_from_has_many": "",
  "test_associations_loaded_for_all_records": "",
  "test_finding_with_includes_on_has_many_association_with_same_include_includes_only_once": "",
  "test_finding_with_includes_on_has_one_association_with_same_include_includes_only_once": "",
  "test_finding_with_includes_on_belongs_to_association_with_same_include_includes_only_once": "",
  "test_finding_with_includes_on_null_belongs_to_association_with_same_include_includes_only_once": "",
  "test_finding_with_includes_on_null_belongs_to_polymorphic_association": "",
  "test_loading_from_an_association": "",
  "test_loading_from_an_association_that_has_a_hash_of_conditions": "",
  "test_loading_with_no_associations": "",
  "test_nested_loading_does_not_raise_exception_when_association_does_not_exist": "Regression test for 21c75e5",
  "test_nested_loading_through_has_one_association": "",
  "test_nested_loading_through_has_one_association_with_order": "",
  "test_nested_loading_through_has_one_association_with_order_on_association": "",
  "test_nested_loading_through_has_one_association_with_order_on_nested_association": "",
  "test_nested_loading_through_has_one_association_with_conditions": "",
  "test_nested_loading_through_has_one_association_with_conditions_on_association": "",
  "test_nested_loading_through_has_one_association_with_conditions_on_nested_association": "",
  "test_eager_association_loading_with_belongs_to_and_foreign_keys": "",
  "test_eager_association_loading_with_belongs_to": "",
  "test_eager_association_loading_with_belongs_to_and_limit": "",
  "test_eager_association_loading_with_belongs_to_and_limit_and_conditions": "",
  "test_eager_association_loading_with_belongs_to_and_limit_and_offset": "",
  "test_eager_association_loading_with_belongs_to_and_limit_and_offset_and_conditions": "",
  "test_eager_association_loading_with_belongs_to_and_limit_and_offset_and_conditions_array": "",
  "test_eager_association_loading_with_belongs_to_and_conditions_string_with_unquoted_table_name": "",
  "test_eager_association_loading_with_belongs_to_and_conditions_hash": "",
  "test_eager_association_loading_with_belongs_to_and_conditions_string_with_quoted_table_name": "",
  "test_eager_association_loading_with_belongs_to_and_order_string_with_unquoted_table_name": "",
  "test_eager_association_loading_with_belongs_to_and_order_string_with_quoted_table_name": "",
  "test_eager_association_loading_with_belongs_to_and_limit_and_multiple_associations": "",
  "test_eager_association_loading_with_belongs_to_and_limit_and_offset_and_multiple_associations": "",
  "test_eager_association_loading_with_belongs_to_inferred_foreign_key_from_association_name": "",
  "test_eager_load_belongs_to_quotes_table_and_column_names": "",
  "test_eager_load_has_one_quotes_table_and_column_names": "",
  "test_eager_load_has_many_quotes_table_and_column_names": "",
  "test_eager_load_has_many_through_quotes_table_and_column_names": "",
  "test_eager_load_has_many_with_string_keys": "",
  "test_string_id_column_joins": "",
  "test_eager_load_has_many_through_with_string_keys": "",
  "test_eager_load_belongs_to_with_string_keys": "",
  "test_eager_association_loading_with_explicit_join": "",
  "test_eager_with_has_many_through": "",
  "test_eager_with_has_many_through_a_belongs_to_association": "",
  "test_eager_with_has_many_through_an_sti_join_model": "",
  "test_eager_with_has_many_through_an_sti_join_model_with_conditions_on_both": "",
  "test_eager_with_has_many_through_join_model_with_conditions": "",
  "test_eager_with_has_many_through_join_model_with_conditions_on_top_level": "",
  "test_eager_with_has_many_through_join_model_with_include": "",
  "test_eager_with_has_many_through_with_conditions_join_model_with_include": "",
  "test_eager_with_has_many_through_join_model_ignores_default_includes": "",
  "test_eager_with_has_many_and_limit": "",
  "test_eager_with_has_many_and_limit_and_conditions": "",
  "test_eager_with_has_many_and_limit_and_conditions_array": "",
  "test_eager_with_has_many_and_limit_and_conditions_array_on_the_eagers": "",
  "test_eager_with_has_many_and_limit_and_high_offset": "",
  "test_eager_with_has_many_and_limit_and_high_offset_and_multiple_array_conditions": "",
  "test_eager_with_has_many_and_limit_and_high_offset_and_multiple_hash_conditions": "",
  "test_count_eager_with_has_many_and_limit_and_high_offset": "",
  "test_eager_with_has_many_and_limit_with_no_results": "",
  "test_eager_count_performed_on_a_has_many_association_with_multi_table_conditional": "",
  "test_eager_count_performed_on_a_has_many_through_association_with_multi_table_conditional": "",
  "test_eager_with_has_and_belongs_to_many_and_limit": "",
  "test_has_and_belongs_to_many_should_not_instantiate_same_records_multiple_times": "Since the preloader for habtm gets raw row hashes from the database and then\ninstantiates them, this test ensures that it only instantiates one actual\nobject per record from the database.",
  "test_eager_with_has_many_and_limit_and_conditions_on_the_eagers": "",
  "test_eager_with_has_many_and_limit_and_scoped_conditions_on_the_eagers": "",
  "test_eager_association_loading_with_habtm": "",
  "test_eager_with_inheritance": "",
  "test_eager_has_one_with_association_inheritance": "",
  "test_eager_has_many_with_association_inheritance": "",
  "test_eager_habtm_with_association_inheritance": "",
  "test_eager_with_has_one_dependent_does_not_destroy_dependent": "",
  "test_eager_with_multi_table_conditional_properly_counts_the_records_when_using_size": "",
  "test_eager_with_invalid_association_reference": "",
  "test_eager_with_default_scope": "",
  "test_eager_with_default_scope_as_class_method": "",
  "test_eager_with_default_scope_as_lambda": "",
  "test_eager_with_default_scope_as_block": "",
  "test_eager_with_default_scope_as_callable": "",
  "find_all_ordered": "",
  "test_limited_eager_with_order": "",
  "test_limited_eager_with_multiple_order_columns": "",
  "test_limited_eager_with_numeric_in_association": "",
  "test_preload_with_interpolation": "",
  "test_polymorphic_type_condition": "",
  "test_eager_with_multiple_associations_with_same_table_has_many_and_habtm": "",
  "assert_equal_after_sort": "Eager includes of has many and habtm associations aren't necessarily sorted in the same way",
  "test_eager_with_multiple_associations_with_same_table_has_one": "",
  "test_eager_with_multiple_associations_with_same_table_belongs_to": "",
  "test_eager_with_valid_association_as_string_not_symbol": "",
  "test_eager_with_floating_point_numbers": "",
  "test_preconfigured_includes_with_belongs_to": "",
  "test_preconfigured_includes_with_has_one": "",
  "test_preconfigured_includes_with_has_many": "",
  "test_preconfigured_includes_with_habtm": "",
  "test_preconfigured_includes_with_has_many_and_habtm": "",
  "test_count_with_include": "",
  "test_load_with_sti_sharing_association": "",
  "test_conditions_on_join_table_with_include_and_limit": "",
  "test_dont_create_temporary_active_record_instances": "",
  "test_order_on_join_table_with_include_and_limit": "",
  "test_eager_loading_with_order_on_joined_table_preloads": "",
  "test_eager_loading_with_conditions_on_joined_table_preloads": "",
  "test_preload_has_many_with_association_condition_and_default_scope": "",
  "test_eager_loading_with_conditions_on_string_joined_table_preloads": "",
  "test_eager_loading_with_select_on_joined_table_preloads": "",
  "test_eager_loading_with_conditions_on_join_model_preloads": "",
  "test_preload_belongs_to_uses_exclusive_scope": "",
  "test_preload_has_many_uses_exclusive_scope": "",
  "test_preload_has_many_using_primary_key": "",
  "test_include_has_many_using_primary_key": "",
  "test_preload_has_one_using_primary_key": "",
  "test_include_has_one_using_primary_key": "",
  "test_preloading_empty_belongs_to": "",
  "test_preloading_empty_belongs_to_polymorphic": "",
  "test_preloading_through_empty_belongs_to": "",
  "test_preloading_has_many_through_with_uniq": "",
  "test_preloading_polymorphic_with_custom_foreign_type": "",
  "test_joins_with_includes_should_preload_via_joins": "",
  "test_join_eager_with_empty_order_should_generate_valid_sql": "",
  "test_join_eager_with_nil_order_should_generate_valid_sql": "",
  "test_deep_including_through_habtm": ""
}