{
  "ole_classes": "Returns array of WIN32OLE_TYPE objects defined by the <i>typelib</i> type library.\nThis method will be OBSOLETE. Use WIN32OLE_TYPELIB.new(typelib).ole_classes instead.",
  "typelibs": "Returns array of type libraries.\nThis method will be OBSOLETE. Use WIN32OLE_TYPELIB.typelibs.collect{|t| t.name} instead.",
  "progids": "Returns array of ProgID.",
  "initialize": "Returns a new WIN32OLE_TYPE object.\nThe first argument <i>typelib</i> specifies OLE type library name.\nThe second argument specifies OLE class name.\n\n    WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application')\n        # => WIN32OLE_TYPE object of Application class of Excel.",
  "name": "Returns OLE type name.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application')\n   puts tobj.name  # => Application",
  "ole_type": "returns type of OLE class.\n  tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application')\n  puts tobj.ole_type  # => Class",
  "guid": "Returns GUID.\n  tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application')\n  puts tobj.guid  # => {00024500-0000-0000-C000-000000000046}",
  "progid": "Returns ProgID if it exists. If not found, then returns nil.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application')\n   puts tobj.progid  # =>   Excel.Application.9",
  "visible?": "Returns true if the OLE class is public.\n  tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application')\n  puts tobj.visible  # => true",
  "to_s": "Returns OLE type name.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application')\n   puts tobj.name  # => Application",
  "major_version": "Returns major version.\n   tobj = WIN32OLE_TYPE.new('Microsoft Word 10.0 Object Library', 'Documents')\n   puts tobj.major_version # => 8",
  "minor_version": "Returns minor version.\n   tobj = WIN32OLE_TYPE.new('Microsoft Word 10.0 Object Library', 'Documents')\n   puts tobj.minor_version # => 2",
  "typekind": "Returns number which represents type.\n  tobj = WIN32OLE_TYPE.new('Microsoft Word 10.0 Object Library', 'Documents')\n  puts tobj.typekind # => 4",
  "helpstring": "Returns help string.\n  tobj = WIN32OLE_TYPE.new('Microsoft Internet Controls', 'IWebBrowser')\n  puts tobj.helpstring # => Web Browser interface",
  "src_type": "Returns source class when the OLE class is 'Alias'.\n   tobj =  WIN32OLE_TYPE.new('Microsoft Office 9.0 Object Library', 'MsoRGBType')\n   puts tobj.src_type # => I4",
  "helpfile": "Returns helpfile path. If helpfile is not found, then returns nil.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Worksheet')\n   puts tobj.helpfile # => C:\\...\\VBAXL9.CHM",
  "helpcontext": "Returns helpcontext. If helpcontext is not found, then returns nil.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Worksheet')\n   puts tobj.helpfile # => 131185",
  "variables": "Returns array of WIN32OLE_VARIABLE objects which represent variables\ndefined in OLE class.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')\n   vars = tobj.variables\n   vars.each do |v|\n     puts \"#{v.name} = #{v.value}\"\n   end\n\n   The result of above sample script is follows:\n     xlChart = -4109\n     xlDialogSheet = -4116\n     xlExcel4IntlMacroSheet = 4\n     xlExcel4MacroSheet = 3\n     xlWorksheet = -4167",
  "ole_methods": "Returns array of WIN32OLE_METHOD objects which represent OLE method defined in\nOLE type library.\n  tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Worksheet')\n  methods = tobj.ole_methods.collect{|m|\n    m.name\n  }\n  # => ['Activate', 'Copy', 'Delete',....]",
  "ole_typelib": "Returns the WIN32OLE_TYPELIB object which is including the WIN32OLE_TYPE\nobject. If it is not found, then returns nil.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Worksheet')\n   puts tobj.ole_typelib # => 'Microsoft Excel 9.0 Object Library'",
  "implemented_ole_types": "Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE\nobject.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Worksheet')\n   p tobj.implemented_ole_types # => [_Worksheet, DocEvents]",
  "source_ole_types": "Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE\nobject and having IMPLTYPEFLAG_FSOURCE.\n   tobj = WIN32OLE_TYPE.new('Microsoft Internet Controls', \"InternetExplorer\")\n   p tobj.source_ole_types\n   # => [#<WIN32OLE_TYPE:DWebBrowserEvents2>, #<WIN32OLE_TYPE:DWebBrowserEvents>]",
  "default_event_sources": "Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE\nobject and having IMPLTYPEFLAG_FSOURCE and IMPLTYPEFLAG_FDEFAULT.\n   tobj = WIN32OLE_TYPE.new('Microsoft Internet Controls', \"InternetExplorer\")\n   p tobj.default_event_sources  # => [#<WIN32OLE_TYPE:DWebBrowserEvents2>]",
  "default_ole_types": "Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE\nobject and having IMPLTYPEFLAG_FDEFAULT.\n   tobj = WIN32OLE_TYPE.new('Microsoft Internet Controls', \"InternetExplorer\")\n   p tobj.default_ole_types\n   # => [#<WIN32OLE_TYPE:IWebBrowser2>, #<WIN32OLE_TYPE:DWebBrowserEvents2>]",
  "inspect": "Returns the type name with class name.\n\n   ie = WIN32OLE.new('InternetExplorer.Application')\n   ie.ole_type.inspect => #<WIN32OLE_TYPE:IWebBrowser2>"
}