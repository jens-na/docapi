{
  "Group": "",
  "Point": "",
  "NAMED_CURVE": "",
  "builtin_curves": "See the OpenSSL documentation for EC_builtin_curves()",
  "initialize": "See the OpenSSL documentation for:\n   EC_KEY_*",
  "group": "Returns a constant <code>OpenSSL::EC::Group</code> that is tied to the key.\nModifying the returned group can make the key invalid.",
  "group=": "Returns the same object passed, not the group object associated with the key.\nIf you wish to access the group object tied to the key call key.group after setting\nthe group.\n\nSetting the group will immediately destroy any previously assigned group object.\nThe group is internally copied by OpenSSL.  Modifying the original group after\nassignment will not effect the internal key structure.\n(your changes may be lost).  BE CAREFUL.\n\nEC_KEY_set_group calls EC_GROUP_free(key->group) then EC_GROUP_dup(), not EC_GROUP_copy.\nThis documentation is accurate for OpenSSL 0.9.8b.",
  "private_key": "See the OpenSSL documentation for EC_KEY_get0_private_key()",
  "private_key=": "See the OpenSSL documentation for EC_KEY_set_private_key()",
  "public_key": "See the OpenSSL documentation for EC_KEY_get0_public_key()",
  "public_key=": "See the OpenSSL documentation for EC_KEY_set_public_key()",
  "private_key?": "Both public_key? and private_key? may return false at the same time unlike other PKey classes.",
  "public_key?": "Both public_key? and private_key? may return false at the same time unlike other PKey classes.",
  "generate_key": "See the OpenSSL documentation for EC_KEY_generate_key()",
  "check_key": "Raises an exception if the key is invalid.\n\nSee the OpenSSL documentation for EC_KEY_check_key()",
  "dh_compute_key": "See the OpenSSL documentation for ECDH_compute_key()",
  "dsa_sign_asn1": "See the OpenSSL documentation for ECDSA_sign()",
  "dsa_verify_asn1": "See the OpenSSL documentation for ECDSA_verify()",
  "export": "Outputs the EC key in PEM encoding.  If +cipher+ and +pass_phrase+ are\ngiven they will be used to encrypt the key.  +cipher+ must be an\nOpenSSL::Cipher::Cipher instance. Note that encryption will only be\neffective for a private key, public keys will always be encoded in plain\ntext.",
  "to_pem": "Outputs the EC key in PEM encoding.  If +cipher+ and +pass_phrase+ are\ngiven they will be used to encrypt the key.  +cipher+ must be an\nOpenSSL::Cipher::Cipher instance. Note that encryption will only be\neffective for a private key, public keys will always be encoded in plain\ntext.",
  "to_der": "See the OpenSSL documentation for i2d_ECPrivateKey_bio()",
  "to_text": "See the OpenSSL documentation for EC_KEY_print()"
}