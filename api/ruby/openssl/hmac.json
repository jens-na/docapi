{
  "digest": "Returns the authentication code an instance represents as a binary string.\n\n=== Example\n\ninstance = OpenSSL::HMAC.new('key', OpenSSL::Digest.new('sha1'))\n#=> f42bb0eeb018ebbd4597ae7213711ec60760843f\ninstance.digest\n#=> \"\\xF4+\\xB0\\xEE\\xB0\\x18\\xEB\\xBDE\\x97\\xAEr\\x13q\\x1E\\xC6\\a`\\x84?\"",
  "hexdigest": "Returns the authentication code an instance represents as a hex-encoded\nstring.",
  "initialize": "Returns an instance of OpenSSL::HMAC set with the key and digest\nalgorithm to be used. The instance represents the initial state of\nthe message authentication code before any data has been processed.\nTo process data with it, use the instance method #update with your\ndata as an argument.\n\n=== Example\n\nkey = 'key'\ndigest = OpenSSL::Digest.new('sha1')\ninstance = OpenSSL::HMAC.new(key, digest)\n#=> f42bb0eeb018ebbd4597ae7213711ec60760843f\ninstance.class\n#=> OpenSSL::HMAC\n\n=== A note about comparisons\n\nTwo instances won't be equal when they're compared, even if they have the\nsame value. Use #to_s or #hexdigest to return the authentication code that\nthe instance represents. For example:\n\nother_instance = OpenSSL::HMAC.new('key', OpenSSL::Digest.new('sha1'))\n\t#=> f42bb0eeb018ebbd4597ae7213711ec60760843f\n\tinstance\n\t#=> f42bb0eeb018ebbd4597ae7213711ec60760843f\n\tinstance == other_instance\n\t#=> false\n\tinstance.to_s == other_instance.to_s\n\t#=> true",
  "reset": "Returns +self+ as it was when it was first initialized, with all processed\ndata cleared from it.\n\n=== Example\n\ndata = \"The quick brown fox jumps over the lazy dog\"\ninstance = OpenSSL::HMAC.new('key', OpenSSL::Digest.new('sha1'))\n#=> f42bb0eeb018ebbd4597ae7213711ec60760843f\n\ninstance.update(data)\n#=> de7c9b85b8b78aa6bc8a7a36f70a90701c9db4d9\ninstance.reset\n#=> f42bb0eeb018ebbd4597ae7213711ec60760843f",
  "update": "Returns +self+ updated with the message to be authenticated.\nCan be called repeatedly with chunks of the message.\n\n=== Example\n\nfirst_chunk = 'The quick brown fox jumps '\nsecond_chunk = 'over the lazy dog'\n\ninstance.update(first_chunk)\n#=> 5b9a8038a65d571076d97fe783989e52278a492a\ninstance.update(second_chunk)\n#=> de7c9b85b8b78aa6bc8a7a36f70a90701c9db4d9",
  "<<": "Returns +self+ updated with the message to be authenticated.\nCan be called repeatedly with chunks of the message.\n\n=== Example\n\nfirst_chunk = 'The quick brown fox jumps '\nsecond_chunk = 'over the lazy dog'\n\ninstance.update(first_chunk)\n#=> 5b9a8038a65d571076d97fe783989e52278a492a\ninstance.update(second_chunk)\n#=> de7c9b85b8b78aa6bc8a7a36f70a90701c9db4d9",
  "inspect": "Returns the authentication code an instance represents as a hex-encoded\nstring.",
  "to_s": "Returns the authentication code an instance represents as a hex-encoded\nstring."
}