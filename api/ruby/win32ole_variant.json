{
  "array": "Returns Ruby object wrapping OLE variant whose variant type is VT_ARRAY.\nThe first argument should be Array object which specifies dimensions\nand each size of dimensions of OLE array.\nThe second argument specifies variant type of the element of OLE array.\n\nThe following create 2 dimensions OLE array. The first dimensions size\nis 3, and the second is 4.\n\n   ole_ary = WIN32OLE_VARIANT.array([3,4], VT_I4)\n   ruby_ary = ole_ary.value # => [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]",
  "initialize": "Returns Ruby object wrapping OLE variant.\nThe first argument specifies Ruby object to convert OLE variant variable.\nThe second argument specifies VARIANT type.\nIn some situation, you need the WIN32OLE_VARIANT object to pass OLE method\n\n   shell = WIN32OLE.new(\"Shell.Application\")\n   folder = shell.NameSpace(\"C:\\\\Windows\")\n   item = folder.ParseName(\"tmp.txt\")\n   # You can't use Ruby String object to call FolderItem.InvokeVerb.\n   # Instead, you have to use WIN32OLE_VARIANT object to call the method.\n   shortcut = WIN32OLE_VARIANT.new(\"Create Shortcut(\\&S)\")\n   item.invokeVerb(shortcut)",
  "value": "Returns Ruby object value from OLE variant.\n   obj = WIN32OLE_VARIANT.new(1, WIN32OLE::VARIANT::VT_BSTR)\n   obj.value # => \"1\" (not Fixnum object, but String object \"1\")",
  "value=": "Sets variant value to val. If the val type does not match variant value\ntype(vartype), then val is changed to match variant value type(vartype)\nbefore setting val.\nThie method is not available when vartype is VT_ARRAY(except VT_UI1|VT_ARRAY).\nIf the vartype is VT_UI1|VT_ARRAY, the val should be String object.\n\n   obj = WIN32OLE_VARIANT.new(1) # obj.vartype is WIN32OLE::VARIANT::VT_I4\n   obj.value = 3.2 # 3.2 is changed to 3 when setting value.\n   p obj.value # => 3",
  "vartype": "Returns OLE variant type.\n   obj = WIN32OLE_VARIANT.new(\"string\")\n   obj.vartype # => WIN32OLE::VARIANT::VT_BSTR",
  "[]": "Returns the element of WIN32OLE_VARIANT object(OLE array).\nThis method is available only when the variant type of\nWIN32OLE_VARIANT object is VT_ARRAY.\n\nREMARK:\n   The all indicies should be 0 or natural number and\n   lower than or equal to max indicies.\n   (This point is different with Ruby Array indicies.)\n\n   obj = WIN32OLE_VARIANT.new([[1,2,3],[4,5,6]])\n   p obj[0,0] # => 1\n   p obj[1,0] # => 4\n   p obj[2,0] # => WIN32OLERuntimeError\n   p obj[0, -1] # => WIN32OLERuntimeError",
  "[]=": "Set the element of WIN32OLE_VARIANT object(OLE array) to val.\nThis method is available only when the variant type of\nWIN32OLE_VARIANT object is VT_ARRAY.\n\nREMARK:\n   The all indicies should be 0 or natural number and\n   lower than or equal to max indicies.\n   (This point is different with Ruby Array indicies.)\n\n   obj = WIN32OLE_VARIANT.new([[1,2,3],[4,5,6]])\n   obj[0,0] = 7\n   obj[1,0] = 8\n   p obj.value # => [[7,2,3], [8,5,6]]\n   obj[2,0] = 9 # => WIN32OLERuntimeError\n   obj[0, -1] = 9 # => WIN32OLERuntimeError",
  "Empty": "",
  "Null": "",
  "Nothing": ""
}