{
  "source_encoding_name": "Returns the source encoding name as a string.",
  "destination_encoding_name": "Returns the destination encoding name as a string.",
  "source_encoding": "Returns the source encoding as an encoding object.\n\nNote that the result may not be equal to the source encoding of\nthe encoding converter if the conversion has multiple steps.\n\n ec = Encoding::Converter.new(\"ISO-8859-1\", \"EUC-JP\") # ISO-8859-1 -> UTF-8 -> EUC-JP\n begin\n   ec.convert(\"\\xa0\") # NO-BREAK SPACE, which is available in UTF-8 but not in EUC-JP.\n rescue Encoding::UndefinedConversionError\n   p $!.source_encoding              #=> #<Encoding:UTF-8>\n   p $!.destination_encoding         #=> #<Encoding:EUC-JP>\n   p $!.source_encoding_name         #=> \"UTF-8\"\n   p $!.destination_encoding_name    #=> \"EUC-JP\"\n end",
  "destination_encoding": "Returns the destination encoding as an encoding object.",
  "error_char": "Returns the one-character string which cause Encoding::UndefinedConversionError.\n\n ec = Encoding::Converter.new(\"ISO-8859-1\", \"EUC-JP\")\n begin\n   ec.convert(\"\\xa0\")\n rescue Encoding::UndefinedConversionError\n   puts $!.error_char.dump   #=> \"\\xC2\\xA0\"\n   p $!.error_char.encoding  #=> #<Encoding:UTF-8>\n end"
}